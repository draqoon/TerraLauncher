<Page x:Class="TerraLauncher.Views.EditDetailPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:TerraLauncher.Views"
      xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
      xmlns:c="clr-namespace:TerraLauncher.Views.Converters"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      mc:Ignorable="d" 
      Title="{Binding Title}"
      FontSize="16">

    <Page.Resources>
        <c:ConverterPipe x:Key="HasPropertyToGridLength">
            <c:HasPropertyConverter />
            <c:BooleanToGridLengthConverter />
        </c:ConverterPipe>
        <c:EnvironmentPathConverter x:Key="EnvironmentPathConverter" />
        <c:ConverterPipe x:Key="HasPropertyToVisibility">
            <c:HasPropertyConverter />
            <BooleanToVisibilityConverter />
        </c:ConverterPipe>

        <Style x:Key="Label" TargetType="Label">
            <Setter Property="HorizontalContentAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5,0,0,0" />
        </Style>
        <Style x:Key="TextBox" TargetType="TextBox">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="5,5,5,5" />
            <Setter Property="Width" Value="500" />
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Background" Value="#ffeeff" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ImageButtonImage" TargetType="Image">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Opacity" Value="0.6" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ImageButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BrowseButton" TargetType="Button" BasedOn="{StaticResource ImageButton}">
            <Setter Property="Margin" Value="0,0,5,0" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
        </Style>
        <Style x:Key="RunButton" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="Padding" Value="20,5" />
            <Setter Property="Margin" Value="0,0,5,10" />
        </Style>
        <Style x:Key="CheckBox" TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="5,5,10,5" />
        </Style>
    </Page.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Confirm;Restore">
            <l:ConfirmationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>

        <ListBox x:Name="LabelListBox" 
                 IsTabStop="False" 
                 HorizontalAlignment="Left" 
                 HorizontalContentAlignment="Right"
                 VerticalAlignment="Top"
                 Opacity="0">
            <ListBox.Items>
                <ListBoxItem Content="{StaticResource Lang:Group}" />
                <ListBoxItem Content="{StaticResource Lang:Title}" />
                <ListBoxItem Content="{StaticResource Lang:Value}" Visibility="{Binding Converter={StaticResource HasPropertyToVisibility}, ConverterParameter=Value}" />
                <ListBoxItem Content="{StaticResource Lang:InstallDirectory}" Visibility="{Binding Converter={StaticResource HasPropertyToVisibility}, ConverterParameter=InstallDirectory}" />
                <ListBoxItem Content="{StaticResource Lang:SaveDirectory}"  Visibility="{Binding Converter={StaticResource HasPropertyToVisibility}, ConverterParameter=SaveDirectory}" />
                <ListBoxItem Content="{StaticResource Lang:Width}" Visibility="{Binding Converter={StaticResource HasPropertyToVisibility}, ConverterParameter=Width}" />
                <ListBoxItem Content="{StaticResource Lang:Height}" Visibility="{Binding Converter={StaticResource HasPropertyToVisibility}, ConverterParameter=Height}" />
            </ListBox.Items>
        </ListBox>

        <StackPanel Orientation="Vertical">

            <Label Content="{Binding PageTitle}" VerticalAlignment="Center" />

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ActualWidth ,ElementName=LabelListBox}" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter='InstallDirectory,SaveDirectory'}"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition Height="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter=Value}" />
                    <RowDefinition Height="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter=InstallDirectory}" />
                    <RowDefinition Height="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter=SaveDirectory}" />
                    <RowDefinition Height="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter=ModLoader}" />
                    <RowDefinition Height="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter=Width}" />
                    <RowDefinition Height="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter=Height}" />
                    <RowDefinition Height="{Binding Converter={StaticResource HasPropertyToGridLength}, ConverterParameter=Support4K}" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" 
                   Content="{StaticResource Lang:Group}" 
                   Style="{StaticResource Label}" />
                <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TextBox}" Text="{Binding Group.Value, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Row="1" Grid.Column="0" 
                   Content="{StaticResource Lang:Title}" 
                   Style="{StaticResource Label}" />
                <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TextBox}" Text="{Binding Title.Value, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Row="2" Grid.Column="0" 
                   Content="{StaticResource Lang:Value}" 
                   Style="{StaticResource Label}" />
                <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource TextBox}" Text="{Binding Value.Value, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Row="3" Grid.Column="0" 
                   Content="{StaticResource Lang:InstallDirectory}" 
                   Style="{StaticResource Label}" />
                <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource TextBox}" Text="{Binding InstallDirectory.Value, UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Row="3" Grid.Column="2" Style="{StaticResource BrowseButton}">
                    <Button.Content>
                        <Image Source="/TerraLauncher;component/Resources/Images/Browse.png" 
                           Style="{StaticResource ImageButtonImage}" 
                           ToolTip="{StaticResource Lang:Browse}" />
                    </Button.Content>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:FolderBrowserDialogInteractionMessageAction>
                                <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="SetPath">
                                    <l:FolderSelectionMessage Title="{StaticResource Lang:InfoSelectInstallDirectory}" 
                                                          SelectedPath="{Binding InstallDirectory.Value, Converter={StaticResource EnvironmentPathConverter}}" />
                                </l:DirectInteractionMessage>
                            </l:FolderBrowserDialogInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Label Grid.Row="4" Grid.Column="0" 
                   Content="{StaticResource Lang:SaveDirectory}" 
                   Style="{StaticResource Label}"/>
                <TextBox Grid.Row="4" Grid.Column="1" Style="{StaticResource TextBox}" Text="{Binding SaveDirectory.Value, UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Row="4" Grid.Column="2" Style="{StaticResource BrowseButton}">
                    <Button.Content>
                        <Image Source="/TerraLauncher;component/Resources/Images/Browse.png" 
                           Style="{StaticResource ImageButtonImage}" 
                           ToolTip="{StaticResource Lang:Browse}" />
                    </Button.Content>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:FolderBrowserDialogInteractionMessageAction>
                                <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="SetSaveDirectory">
                                    <l:FolderSelectionMessage Title="{StaticResource Lang:InfoSelectSaveDirectory}" 
                                                          SelectedPath="{Binding SaveDirectory.Value, Converter={StaticResource EnvironmentPathConverter}}" />
                                </l:DirectInteractionMessage>
                            </l:FolderBrowserDialogInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <CheckBox Grid.Row="5" Grid.Column="1" Style="{StaticResource CheckBox}" IsChecked="{Binding ModLoader.Value}">
                    <Label Content="{StaticResource Lang:ModLoader}" />
                </CheckBox>

                <Label Grid.Row="6" Grid.Column="0" 
                   Content="{StaticResource Lang:Width}" 
                   Style="{StaticResource Label}"/>
                <TextBox Grid.Row="6" Grid.Column="1" Style="{StaticResource TextBox}" Width="80" HorizontalContentAlignment="Right" Text="{Binding Width.Value, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Row="7" Grid.Column="0"
                   Content="{StaticResource Lang:Height}" 
                   Style="{StaticResource Label}"/>
                <TextBox Grid.Row="7" Grid.Column="1" Style="{StaticResource TextBox}" Width="80" HorizontalContentAlignment="Right" Text="{Binding Height.Value, UpdateSourceTrigger=PropertyChanged}" />

                <CheckBox Grid.Row="8" Grid.Column="1" Style="{StaticResource CheckBox}" IsChecked="{Binding Support4K.Value}">
                    <Label Content="{StaticResource Lang:Support4K}" />
                </CheckBox>
            </Grid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="{StaticResource Lang:Restore}" 
                    Style="{StaticResource RunButton}" 
                    Visibility="{Binding CanRestore.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Restore" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="{StaticResource Lang:Save}" 
                    Style="{StaticResource RunButton}" 
                    IsEnabled="{Binding CanApply.Value}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Apply" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="{StaticResource Lang:Cancel}" 
                    Style="{StaticResource RunButton}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Cancel" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>
